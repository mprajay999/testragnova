[TextBlock(citations=None, text='```tsx\nimport React, { useState, useEffect } from \'react\';\nimport Link from \'next/link\';\nimport { useRouter } from \'next/router\';\nimport { motion, AnimatePresence } from \'framer-motion\';\nimport { FaBars, FaTimes } from \'react-icons/fa\';\n\nconst Navigation: React.FC = () => {\n  const [isScrolled, setIsScrolled] = useState<boolean>(false);\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener(\'scroll\', handleScroll);\n    return () => window.removeEventListener(\'scroll\', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    // Close mobile menu when route changes\n    setIsMenuOpen(false);\n  }, [router.pathname]);\n\n  const navItems = [\n    { name: \'Home\', path: \'/\' },\n    { name: \'Menu\', path: \'/menu\' },\n    { name: \'Our Story\', path: \'/about\' },\n    { name: \'Reservations\', path: \'/reservations\' },\n    { name: \'Gallery\', path: \'/gallery\' },\n    { name: \'Contact\', path: \'/contact\' },\n  ];\n\n  const logoVariants = {\n    normal: { scale: 1 },\n    scrolled: { scale: 0.8 },\n  };\n\n  const navVariants = {\n    open: { opacity: 1, y: 0 },\n    closed: { opacity: 0, y: "-100%" },\n  };\n\n  return (\n    <header \n      className={`fixed top-0 w-full z-50 transition-all duration-300 ${\n        isScrolled ? \'bg-primary py-3 shadow-lg\' : \'bg-transparent py-6\'\n      }`}\n    >\n      <div className="container mx-auto px-4">\n        <div className="flex justify-between items-center">\n          <motion.div \n            className="logo"\n            variants={logoVariants}\n            animate={isScrolled ? \'scrolled\' : \'normal\'}\n            transition={{ duration: 0.3 }}\n          >\n            <Link href="/">\n              <a className="flex items-center">\n                <div className="mr-3">\n                  <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">\n                    <path d="M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z" stroke="#C0A363" strokeWidth="2"/>\n                    <path d="M15 15L22 24L15 33" stroke="#C0A363" strokeWidth="2"/>\n                    <path d="M33 15L26 24L33 33" stroke="#C0A363" strokeWidth="2"/>\n                  </svg>\n                </div>\n                <div>\n                  <h1 className={`font-heading font-bold text-xl md:text-2xl ${isScrolled ? \'text-background\' : \'text-secondary\'}`}>\n                    Kuxyury\n                  </h1>\n                  <p className={`text-xs tracking-widest ${isScrolled ? \'text-background opacity-80\' : \'text-secondary\'}`}>\n                    MEXICAN DINING\n                  </p>\n                </div>\n              </a>\n            </Link>\n          </motion.div>\n\n          {/* Desktop Navigation */}\n          <nav className="hidden md:flex items-center space-x-8">\n            {navItems.map((item, index) => (\n              <Link href={item.path} key={index}>\n                <a className={`text-sm font-medium tracking-wider uppercase transition-all hover:text-accent ${\n                  isScrolled \n                    ? router.pathname === item.path ? \'text-accent\' : \'text-background\' \n                    : router.pathname === item.path ? \'text-accent\' : \'text-secondary\'\n                }`}>\n                  {item.name}\n                </a>\n              </Link>\n            ))}\n            <Link href="/reservations">\n              <a className={`px-5 py-2 rounded-full transition-all duration-300 ${\n                isScrolled \n                  ? \'bg-accent text-primary hover:bg-secondary\' \n                  : \'bg-secondary text-background hover:bg-accent hover:text-primary\'\n              }`}>\n                Reserve Now\n              </a>\n            </Link>\n          </nav>\n\n          {/* Mobile Menu Button */}\n          <button \n            className="md:hidden text-secondary z-50"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            aria-label={isMenuOpen ? "Close menu" : "Open menu"}\n          >\n            {isMenuOpen ? (\n              <FaTimes className={`w-6 h-6 ${isScrolled ? \'text-background\' : \'text-secondary\'}`} />\n            ) : (\n              <FaBars className={`w-6 h-6 ${isScrolled ? \'text-background\' : \'text-secondary\'}`} />\n            )}\n          </button>\n        </div>\n      </div>\n\n      {/* Mobile Navigation */}\n      <AnimatePresence>\n        {isMenuOpen && (\n          <motion.div \n            className="fixed inset-0 bg-primary bg-opacity-95 md:hidden flex flex-col justify-center items-center z-40"\n            initial="closed"\n            animate="open"\n            exit="closed"\n            variants={navVariants}\n            transition={{ duration: 0.4, ease: "easeInOut" }}\n          >\n            <nav className="flex flex-col items-center space-y-6">\n              {navItems.map((item, index) => (\n                <Link href={item.path} key={index}>\n                  <a className={`text-xl font-medium tracking-wider uppercase transition-all ${\n                    router.pathname === item.path \n                      ? \'text-accent\' \n                      : \'text-background hover:text-accent\'\n                  }`}>\n                    {item.name}\n                  </a>\n                </Link>\n              ))}\n              <Link href="/reservations">\n                <a className="mt-6 px-6 py-3 rounded-full bg-accent text-primary hover:bg-secondary transition-all duration-300">\n                  Reserve Now\n                </a>\n              </Link>\n            </nav>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </header>\n  );\n};\n\nexport default Navigation;\n```', type='text')]